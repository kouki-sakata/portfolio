services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DOCKER_DB_NAME:-teamdev_db}
      DB_USERNAME: ${DOCKER_DB_USERNAME:-user}
      DB_PASSWORD: ${DOCKER_DB_PASSWORD:-password}
      APP_NAME: ${APP_NAME:-TeamDevelop}
      SERVER_PORT: 8080
      LOG_LEVEL_ROOT: ${LOG_LEVEL_ROOT:-INFO}
      LOG_LEVEL_WEB: ${LOG_LEVEL_WEB:-DEBUG}
      LOG_LEVEL_HIBERNATE: ${LOG_LEVEL_HIBERNATE:-ERROR}
      JWT_SECRET: ${JWT_SECRET:-default-secret-key-change-in-production}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-default-encryption-key}
      JAVA_OPTS: "-Xms512m -Xmx1g"
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1.5G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DOCKER_DB_NAME:-teamdev_db}
      POSTGRES_USER: ${DOCKER_DB_USERNAME:-user}
      POSTGRES_PASSWORD: ${DOCKER_DB_PASSWORD:-password}
      TZ: Asia/Tokyo
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./src/main/resources/01_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
      - ./src/main/resources/02_data.sql:/docker-entrypoint-initdb.d/02_data.sql:ro
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/03_extensions.sql:ro
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DOCKER_DB_USERNAME:-user} -d ${DOCKER_DB_NAME:-teamdev_db}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  db_data:

networks:
  default:
    name: teamdev-network
