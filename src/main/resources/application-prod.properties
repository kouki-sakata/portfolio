# 本番環境用設定ファイル
# セキュリティとパフォーマンスを重視した設定

# 環境識別
app.environment=production

# パスワードマイグレーション設定（本番では無効化）
app.startup.password-migration.enabled=false

# 本番用セキュリティ強化ログレベル
# アプリケーションログは警告レベル以上のみ
logging.level.com.example.teamdev=WARN
logging.level.com.example.teamdev.security=INFO
logging.level.com.example.teamdev.service=WARN
logging.level.com.example.teamdev.controller=WARN

# Spring Frameworkログレベルを制限
logging.level.org.springframework=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot=WARN

# データベース関連ログを制限
logging.level.org.hibernate=WARN
logging.level.org.hibernate.SQL=ERROR
logging.level.com.example.teamdev.mapper=WARN

# 外部ライブラリのログを制限
logging.level.org.apache.tomcat=WARN
logging.level.org.apache.catalina=WARN
logging.level.com.zaxxer.hikari=WARN

# 本番用ログファイル設定
logging.file.name=${LOG_FILE:logs/teamdev-prod.log}
logging.logback.rollingpolicy.max-file-size=200MB
logging.logback.rollingpolicy.max-history=90
logging.logback.rollingpolicy.total-size-cap=10GB

# エラーログ分離
logging.level.ERROR=logs/teamdev-error.log

# セキュリティ監査ログ用の設定
logging.level.com.example.teamdev.aspect.SessionValidationAspect=INFO
logging.level.org.springframework.security.web.access=INFO

# 本番用ログフォーマット（IPアドレス、ユーザーID等を含む）
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [%X{userId:-anonymous}] [%X{requestId:-}] %logger{36} - %msg%n
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) [%thread] [%X{userId:-anonymous}] %cyan(%logger{36}) - %msg%n

# 本番用データベース設定（環境変数必須）
spring.datasource.url=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=true&requireSSL=true&characterEncoding=UTF-8&serverTimezone=Asia/Tokyo
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# 本番環境ではデータ初期化を無効
spring.sql.init.mode=never

# セッション設定（本番用）
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# セキュリティヘッダー設定
server.servlet.session.cookie.max-age=1800

# Actuator設定（本番では制限）
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=never
management.endpoints.web.base-path=/actuator
management.server.port=${MANAGEMENT_PORT:8081}

# 本番用パフォーマンス設定
server.tomcat.max-threads=200
server.tomcat.min-spare-threads=10
server.tomcat.connection-timeout=20s
server.tomcat.accept-count=100

# JVM最適化
server.tomcat.mbeanregistry.enabled=true

# 本番環境情報
info.app.description=勤怠管理システム（本番環境）
info.app.environment=production
info.app.version=@project.version@
info.app.build-time=@timestamp@

# キャッシュ設定（本番用）
spring.cache.cache-names=employees,employeeDataTables,employeeById
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=10m

# エラーページ設定
server.error.whitelabel.enabled=false
server.error.include-stacktrace=never
server.error.include-message=never

# 文字エンコーディング
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true

# HTTP/2有効化（パフォーマンス向上）
server.http2.enabled=true

# 圧縮設定
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024