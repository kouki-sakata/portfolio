# ステージング環境用設定ファイル
# 本番に近い環境でのテスト用設定

# 環境識別
app.environment=staging

# パスワードマイグレーション設定（ステージングでは有効）
app.startup.password-migration.enabled=true

# ステージング用ログレベル（本番より詳細、開発より制限）
logging.level.com.example.teamdev=INFO
logging.level.com.example.teamdev.security=DEBUG
logging.level.com.example.teamdev.service=INFO
logging.level.com.example.teamdev.controller=INFO

# Spring Frameworkログレベル
logging.level.org.springframework=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.web=INFO

# データベース関連ログ
logging.level.org.hibernate=INFO
logging.level.org.hibernate.SQL=INFO
logging.level.com.example.teamdev.mapper=INFO

# ステージング用ログファイル設定
logging.file.name=${LOG_FILE:logs/teamdev-staging.log}
logging.logback.rollingpolicy.max-file-size=100MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=5GB

# テスト用ログフォーマット
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] [%X{userId:-anonymous}] [%X{requestId:-}] %logger{36} - %msg%n

# ステージング用データベース設定
spring.datasource.url=jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:timemanagerdb_staging}?useSSL=true&characterEncoding=UTF-8&serverTimezone=Asia/Tokyo
spring.datasource.username=${DB_USERNAME:staging_user}
spring.datasource.password=${DB_PASSWORD:staging_password}

# ステージングではデータ初期化を制御
spring.sql.init.mode=${INIT_MODE:always}

# セッション設定（テスト用に少し長め）
server.servlet.session.timeout=45m
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true

# Actuator設定（ステージングでは詳細表示）
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=when_authorized
management.endpoints.web.cors.allowed-origins=*

# ステージング環境情報
info.app.description=勤怠管理システム（ステージング環境）
info.app.environment=staging
info.app.version=@project.version@

# パフォーマンス設定
server.tomcat.max-threads=100
server.tomcat.min-spare-threads=5

# エラーページ設定（デバッグ情報あり）
server.error.include-stacktrace=on_param
server.error.include-message=always