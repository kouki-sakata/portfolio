<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.teamdev.mapper.StampHistoryMapper">
    <!--対象年月、対象従業員IDの打刻記録情報を取得する-->
    <!--対象年月の日数分行を取得したいので、MySQLのSQL文でカレンダーテーブル（generated_dates）を作成し、右外部結合する-->
    <select id="getStampHistoryByYearMonthEmployeeId" parameterType="map"
            resultType="com.example.teamdev.entity.StampHistoryDisplay">
        SELECT
        stamp_history.id,
        COALESCE(stamp_history.year, DATE_FORMAT(generated_dates.date, '%Y')) AS
        year,
        COALESCE(stamp_history.month, DATE_FORMAT(generated_dates.date, '%m'))
        AS month,
        COALESCE(stamp_history.day, DATE_FORMAT(generated_dates.date, '%d')) AS
        day,
        CASE DAYOFWEEK(generated_dates.date)
        WHEN 1 THEN '日'
        WHEN 2 THEN '月'
        WHEN 3 THEN '火'
        WHEN 4 THEN '水'
        WHEN 5 THEN '木'
        WHEN 6 THEN '金'
        WHEN 7 THEN '土'
        END AS day_of_week,
        emp.id AS employee_id,
        CONCAT_WS(' ', emp.first_name, emp.last_name) AS employee_name,
        CONCAT_WS(' ', emp2.first_name, emp2.last_name) AS update_employee_name,
        TIME_FORMAT(stamp_history.in_time, '%H:%i') AS in_time,
        TIME_FORMAT(stamp_history.out_time, '%H:%i') AS out_time,
        DATE_FORMAT(stamp_history.update_date, '%Y/%m/%d %H:%i') AS update_date
        FROM
        (
        SELECT *, DATE_FORMAT(CONCAT(year, '-', LPAD(month, 2, '0'), '-',
        LPAD(day, 2, '0')), '%Y-%m-%d') AS formatted_date
        FROM stamp_history
        WHERE year = #{year} AND month = #{month} AND employee_id =
        #{employeeId}
        ) AS stamp_history
        RIGHT JOIN (
        SELECT
        @f := DATE_FORMAT(CURDATE(), #{startDate}) AS date
        UNION ALL
        SELECT
        @f := date_format(date_add(@f, interval 1 day), '%Y-%m-%d') AS date
        FROM
        `information_schema`.COLUMNS
        WHERE
        @f &lt; LAST_DAY(DATE_FORMAT(CURDATE(), #{startDate}))
        ) AS generated_dates
        ON stamp_history.year = YEAR(generated_dates.date)
        AND stamp_history.month = MONTH(generated_dates.date)
        AND stamp_history.day = DAY(generated_dates.date)
        LEFT JOIN employee AS emp ON emp.id = #{employeeId}
        LEFT JOIN employee AS emp2 ON stamp_history.update_employee_id = emp2.id
    </select>

    <!-- データを挿入または更新する -->
    <!--①saveStampHistory→saveに修正②ON DUPLICATE KEY UPDATEの重複のキー削除-->
    <!--③IFNULL関数追記-->
    <insert id="save" parameterType="com.example.teamdev.entity.StampHistory">
        INSERT INTO stamp_history (
        id, year, month, day, employee_id, in_time, out_time,
        update_employee_id, update_date
        ) VALUES (
        #{id}, #{year}, #{month}, #{day}, #{employeeId}, #{inTime}, #{outTime},
        #{updateEmployeeId}, #{updateDate}
        )
        ON DUPLICATE KEY UPDATE
        in_time = IFNULL(in_time, VALUES(in_time)),
        out_time = IFNULL(out_time, VALUES(out_time)),
        update_employee_id = VALUES(update_employee_id),
        update_date = VALUES(update_date)
    </insert>
    <!--更新の追記-->
    <update id="update" parameterType="com.example.teamdev.entity.StampHistory">
        UPDATE stamp_history
        SET
        year = #{year},
        month = #{month},
        day = #{day},
        in_time = #{inTime},
        out_time = #{outTime},
        update_employee_id = #{updateEmployeeId},
        update_date = #{updateDate}
        WHERE id = #{id}
    </update>
</mapper>
