plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.owasp.dependencycheck' version '8.4.0'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootRun') {
	jvmArgs '--enable-native-access=ALL-UNNAMED'
}

tasks.withType(JavaExec) {
	jvmArgs '--enable-native-access=ALL-UNNAMED'
}

tasks.withType(Test) {
	jvmArgs '--enable-native-access=ALL-UNNAMED'
}

if (project.hasProperty('bootRun')) {
	bootRun {
		jvmArgs '--enable-native-access=ALL-UNNAMED'
	}
}

// OWASP Dependency Check設定
dependencyCheck {
	formats = ['HTML', 'JSON', 'XML']
	outputDirectory = 'build/reports/dependency-check'
	suppressionFile = 'dependency-check-suppressions.xml'
	failBuildOnCVSS = 7.0
}

// SonarQube設定
sonar {
	properties {
		property 'sonar.projectName', 'TeamDevelop'
		property 'sonar.projectKey', 'teamdev'
		property 'sonar.java.source', '21'
		property 'sonar.gradle.skipCompile', 'true'
		property 'sonar.coverage.exclusions', [
			'**/config/**',
			'**/constant/**',
			'**/dto/**',
			'**/entity/**',
			'**/form/**',
			'**/exception/**',
			'**/TeamDevelopApplication.java'
		].join(',')
		property 'sonar.exclusions', [
			'src/main/resources/**',
			'build/**',
			'gradle/**'
		].join(',')
	}
}

